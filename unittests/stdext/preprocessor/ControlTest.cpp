// @copyright 2017-2018 zzu_softboy <zzu_softboy@163.com>
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// Created by softboy on 2018/01/18.

#include "gtest/gtest.h"

#include "pdk/stdext/preprocessor/Control.h"
#include "pdk/stdext/preprocessor/arithmetic/Add.h"
#include "pdk/stdext/preprocessor/arithmetic/Dec.h"

#define TR(x) 1

# define PRED(d, state) state
# define OP_1(d, state) PDK_PP_DEC(state)

# define OP_2(d, state) PDK_PP_DEC(PDK_PP_ADD(PDK_PP_WHILE(PRED, OP_1, state), state))
# define OP_3(d, state) PDK_PP_DEC(PDK_PP_ADD_D(d, PDK_PP_WHILE_ ## d(PRED, OP_1, state), state))

TEST(ControlTest, testControl)
{
   ASSERT_EQ(PDK_PP_EXPR_IIF(0, TR)(0), 0);
   ASSERT_EQ(PDK_PP_EXPR_IIF(1, TR)(0), 1);
   
   ASSERT_EQ(PDK_PP_EXPR_IF(3, TR)(0), 1);
   ASSERT_EQ(PDK_PP_EXPR_IF(0, TR)(0), 0);
   
   ASSERT_EQ(PDK_PP_IIF(0, 1, 0), 0);
   ASSERT_EQ(PDK_PP_IIF(1, 1, 0), 1);
   
   ASSERT_EQ(PDK_PP_IF(0, 1, 0), 0);
   ASSERT_EQ(PDK_PP_IF(9, 1, 0), 1);
   
   ASSERT_EQ(PDK_PP_WHILE(PRED, OP_1, 50), 0);
   ASSERT_EQ(PDK_PP_WHILE(PRED, OP_2, 10), 0);
   ASSERT_EQ(PDK_PP_WHILE(PRED, OP_3, 10), 0);
}
